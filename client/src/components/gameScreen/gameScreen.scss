// Credits: https://codepen.io/MatthewShields/pen/pwrXpV?editors=0110
$outline-width: 6px;
$shadow-width: 4px;

$button-bg: #92CD41;
$button-bg-secondary: #76c442;
$button-shadow: #4AA52E;

.gs {
  display: flex;
  height: 100%;
  padding: 16px;
  position: relative;

  &.corona { 
    .players,
    .game {
      animation: squiggle 300ms infinite;
    }

    h2, li, p {
      color: rgb(51, 51, 51);
    }
  }
}

.players {
  flex: 1 0 45%;
  border-radius: 5px;
  border: 4px solid #343434;
  padding: 16px;
  width: 100%;
  overflow: hidden;

  h2 {
    font-size: 16px;
    text-align: center;
    line-height: 22px;
  }

  ul {
    padding: 8px;
  }

  li {
    font-size: 13px;
    line-height: 18px;
    color: #343434;
  }

  li.guessed {
    text-decoration: line-through;
  }

  li.not-playing {
    color: #888;
  }

  h2 + ul {
    margin-top: 16px;
  }

  li + li {
    margin-top: 4px;
  }
}

.players + .game {
  margin-left: 2px;
}

.game {
  border-radius: 5px;
  border: 4px solid #343434;
  display: flex;
  flex-direction: column;
  flex: 1 0 55%;
  justify-content: space-between;
  padding: 16px;

  h2 {
    font-size: 16px;
    line-height: 22px;
    text-align: center;
  }
}

.game-waiting {
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-name: blink;
  font-size: 12px;
  line-height: 16px;
  margin: 32px 0;
  text-align: center;
}

.game-target-number {
  text-align: center;
  font-size: 42px;
  margin: 32px 0;
}

.game-countdown {
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-name: blink;
  font-size: 24px;
  text-align: center;
}

.game-options {
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  pointer-events: none;
  width: 100%;

  &.ready {
    pointer-events: auto;

    .game-option {
      filter: none;
    }
  }
}

.game-option {
  background: $button-bg;
  box-shadow: inset (-$shadow-width) (-$shadow-width) 0px 0px $button-shadow;
  color: white;
  display: inline-block;
  font-size: 20px;
  filter: brightness(0.4);
  margin-top: 32px;
  outline: none;
  padding: 16px;
  position: relative;
  width: 40%;

  &.selected {
    filter: none!important;
  }
  
  &:hover,
  &:focus {
    background: $button-bg-secondary;
    box-shadow: inset (-$shadow-width*1.5) (-$shadow-width*1.5) 0px 0px $button-shadow;
    cursor: pointer;
  }

  &:active {
    box-shadow: inset $shadow-width $shadow-width 0px 0px $button-shadow;
  }

  &:before,
  &:after {
    content: '';
    box-sizing: content-box;
    height: 100%;
    position: absolute;
    width: 100%;
  }

  &:before {
    top: -$outline-width;
    left: 0;
    border-top: $outline-width #343434 solid;
    border-bottom: $outline-width #343434 solid;
  }

  &:after {
    left: -$outline-width;
    top: 0;
    border-left: $outline-width #343434 solid;
    border-right: $outline-width #343434 solid;
  }
}

.ib {
  align-items: flex-start;
  background: #F7F7F7;
  border-radius: 5px;
  border: 4px solid #343434;
  bottom: 0;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  height: 40%;
  left: 0;
  margin: auto;
  padding: 16px;
  position: fixed;
  right: 0;
  text-align: center;
  top: 0;
  width: 80%;
  z-index: 5;

  .gs.corona + & {
    animation: squiggle 500ms infinite;
  }

  .ib-sum {
    flex: 1 0 100%;
  }

  .ib-new-game,
  .ib-invalid-game {
    align-self: center;
    font-size: 16px;
    line-height: 22px;
  }

  h3 {
    align-self: center;
    flex: 1 0 100%;
    font-size: 42px;
    line-height: 55px;

    &.ib-corona {
      font-size: 24px;
      line-height: 32px;
    }
  }

  .ib-new-game {
    flex: 1 0 100%;
    font-size: 12px;
    align-self: flex-end;

    &.hidden {
      display: none;
    }
  }
}

.ib-bg-dizzy {
  border-radius: 50%;
  position: absolute;

  &.full {
    background: rgb(51, 51, 51);
  }

  &.stroke {
    background: white;
    border: 6px solid rgb(51, 51, 51);
  }
}

.ib-bg-squiggles {
  display: none;
}

.ib-bg-rain {
  $drops: 16;
  $height: 30px;
  $offset: 100% / $drops;
  $width: 6px;

  width: $width;
	height: $height;
	background-color: royalblue;
	position: absolute;
	animation-name: rain;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
  top: -$height;

  @for $i from 1 through $drops {
    &:nth-child(#{$i}) {
      left: $offset * $i;
      animation-duration: 1000ms + (random(2500) * 1ms);
    }
  }
}

@keyframes rain {
  0% { transform: translateY(0vh); }
  100% { transform: translateY(100vh); }
}

@keyframes squiggle {
  0% { filter: url('#squiggle-0'); }
  25% { filter: url('#squiggle-1'); }
  50% { filter: url('#squiggle-2'); }
  75% { filter: url('#squiggle-3'); }
  100% { filter: url('#squiggle-4'); }
}